{
  "{\"sourceRoot\":\"/Users/jisang/Desktop/workspaces/supergulp/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/jisang/Desktop/workspaces/supergulp\",\"filename\":\"/Users/jisang/Desktop/workspaces/supergulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jisang/Desktop/workspaces/supergulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/jisang/Desktop/workspaces/supergulp/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/jisang/Desktop/workspaces/supergulp",
      "filename": "/Users/jisang/Desktop/workspaces/supergulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/jisang/Desktop/workspaces/supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/jisang/Desktop/workspaces/supergulp/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/jisang/Desktop/workspaces/supergulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/jisang/Desktop/workspaces/supergulp/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireWildcard(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireWildcard(require(\"gulp-sass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar routes = {\n  pug: {\n    src: \"src/*.pug\",\n    //애를 감시하면 제대로 작동안함 고로 모든 파일을 감시해야해\n    watch: \"src/**/*.pug\",\n    dest: \"goal\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"goal/css\"\n  },\n  img: {\n    src: \"src/img/*\",\n    dest: \"goal/img\"\n  }\n  /* img:{\n       src:\"src/img/*\",\n       dest:\"goal/img\"\n   }   */\n\n};\n\nvar css = function css() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass.logError)).pipe((0, _gulp.dest)(routes.scss.dest));\n};\n\nvar pug = function pug() {\n  return _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.pug.dest));\n};\n\nvar clear = function clear() {\n  return (0, _del[\"default\"])([\"goal\"]);\n};\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"goal/\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true,\n    open: true\n  }));\n};\n\nvar watchTarget = function watchTarget() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug);\n\n  _gulp[\"default\"].watch(routes.img.src, img);\n\n  _gulp[\"default\"].watch(routes.scss.watch, css);\n};\n\nvar watch_img = function watch_img() {\n  return _gulp[\"default\"].watch(routes.img.src.img);\n};\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n};\n\nvar imgOpt = function imgOpt() {\n  _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n}; //위에 경우 async 에러 남, 화살표 함수가 {}감싸면 this 속성이 변함 주의😂😂😂😂😂\n//내가 커맨드 할것만 export 하면댐\n//img는 용량이커서 시간 많이 잡아먹으니까 prepare section에서 시행시키는게 나을듯, 계속 watch당하면 너무 비효율적임\n\n\nvar prepare = _gulp[\"default\"].series([clear, img]);\n\nvar live = _gulp[\"default\"].parallel([webserver, watchTarget]); //동시 실행\n\n\nvar assets = _gulp[\"default\"].series([pug, css]);\n\nvar dev = _gulp[\"default\"].series([prepare, assets, live]); //export const enable_watch_img = gulp.series([watch_img]);\n///문제, 이제 여기선 reload기능이 안먹힘 --> gulp가 내 pug파일을 감시안하기 때문\n\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImdTYXNzIiwiY29tcGlsZXIiLCJyZXF1aXJlIiwicm91dGVzIiwicHVnIiwic3JjIiwid2F0Y2giLCJkZXN0Iiwic2NzcyIsImltZyIsImNzcyIsImd1bHAiLCJwaXBlIiwib24iLCJsb2dFcnJvciIsImNsZWFyIiwid2Vic2VydmVyIiwibGl2ZXJlbG9hZCIsIm9wZW4iLCJ3YXRjaFRhcmdldCIsIndhdGNoX2ltZyIsImltZ09wdCIsInByZXBhcmUiLCJzZXJpZXMiLCJsaXZlIiwicGFyYWxsZWwiLCJhc3NldHMiLCJkZXYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBQSxxQkFBTUMsUUFBTixHQUFpQkMsT0FBTyxDQUFDLFdBQUQsQ0FBeEI7QUFDQSxJQUFNQyxNQUFNLEdBQUc7QUFDWEMsRUFBQUEsR0FBRyxFQUFDO0FBQ0FDLElBQUFBLEdBQUcsRUFBRSxXQURMO0FBQ2tCO0FBQ2xCQyxJQUFBQSxLQUFLLEVBQUUsY0FGUDtBQUdBQyxJQUFBQSxJQUFJLEVBQUM7QUFITCxHQURPO0FBTVhDLEVBQUFBLElBQUksRUFBQztBQUNERixJQUFBQSxLQUFLLEVBQUMsb0JBREw7QUFFREQsSUFBQUEsR0FBRyxFQUFFLHFCQUZKO0FBR0RFLElBQUFBLElBQUksRUFBRTtBQUhMLEdBTk07QUFZWEUsRUFBQUEsR0FBRyxFQUFFO0FBQ0RKLElBQUFBLEdBQUcsRUFBRSxXQURKO0FBRURFLElBQUFBLElBQUksRUFBRTtBQUZMO0FBSU47Ozs7O0FBaEJZLENBQWY7O0FBc0JBLElBQU1HLEdBQUcsR0FBRyxTQUFOQSxHQUFNO0FBQUEsU0FBTUMsaUJBQUtOLEdBQUwsQ0FBU0YsTUFBTSxDQUFDSyxJQUFQLENBQVlILEdBQXJCLEVBQTBCTyxJQUExQixDQUErQiw0QkFBUUMsRUFBUixDQUFXLE9BQVgsRUFBbUJDLGtCQUFuQixDQUEvQixFQUE2REYsSUFBN0QsQ0FBa0UsZ0JBQUtULE1BQU0sQ0FBQ0ssSUFBUCxDQUFZRCxJQUFqQixDQUFsRSxDQUFOO0FBQUEsQ0FBWjs7QUFFQSxJQUFNSCxHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLFNBQ1ZPLGlCQUNHTixHQURILENBQ09GLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXQyxHQURsQixFQUVHTyxJQUZILENBRVEsMEJBRlIsRUFHR0EsSUFISCxDQUdRRCxpQkFBS0osSUFBTCxDQUFVSixNQUFNLENBQUNDLEdBQVAsQ0FBV0csSUFBckIsQ0FIUixDQURVO0FBQUEsQ0FBWjs7QUFNQSxJQUFNUSxLQUFLLEdBQUcsU0FBUkEsS0FBUTtBQUFBLFNBQU0scUJBQUksQ0FBQyxNQUFELENBQUosQ0FBTjtBQUFBLENBQWQ7O0FBRUEsSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVk7QUFBQSxTQUFNTCxpQkFBS04sR0FBTCxDQUFTLE9BQVQsRUFBa0JPLElBQWxCLENBQXVCLCtCQUFHO0FBQzlDSyxJQUFBQSxVQUFVLEVBQUUsSUFEa0M7QUFFOUNDLElBQUFBLElBQUksRUFBRTtBQUZ3QyxHQUFILENBQXZCLENBQU47QUFBQSxDQUFsQjs7QUFLQSxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFLO0FBQ3JCUixtQkFBS0wsS0FBTCxDQUFXSCxNQUFNLENBQUNDLEdBQVAsQ0FBV0UsS0FBdEIsRUFBNEJGLEdBQTVCOztBQUNBTyxtQkFBS0wsS0FBTCxDQUFXSCxNQUFNLENBQUNNLEdBQVAsQ0FBV0osR0FBdEIsRUFBMEJJLEdBQTFCOztBQUNBRSxtQkFBS0wsS0FBTCxDQUFXSCxNQUFNLENBQUNLLElBQVAsQ0FBWUYsS0FBdkIsRUFBNkJJLEdBQTdCO0FBRUgsQ0FMRDs7QUFPQSxJQUFNVSxTQUFTLEdBQUcsU0FBWkEsU0FBWTtBQUFBLFNBQU1ULGlCQUFLTCxLQUFMLENBQVdILE1BQU0sQ0FBQ00sR0FBUCxDQUFXSixHQUFYLENBQWVJLEdBQTFCLENBQU47QUFBQSxDQUFsQjs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLFNBQ1ZFLGlCQUNHTixHQURILENBQ09GLE1BQU0sQ0FBQ00sR0FBUCxDQUFXSixHQURsQixFQUVHTyxJQUZILENBRVEsNEJBRlIsRUFHR0EsSUFISCxDQUdRRCxpQkFBS0osSUFBTCxDQUFVSixNQUFNLENBQUNNLEdBQVAsQ0FBV0YsSUFBckIsQ0FIUixDQURVO0FBQUEsQ0FBWjs7QUFNQSxJQUFNYyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFLO0FBQ2hCVixtQkFDQ04sR0FERCxDQUNLRixNQUFNLENBQUNNLEdBQVAsQ0FBV0osR0FEaEIsRUFFQ08sSUFGRCxDQUVNLDRCQUZOLEVBR0NBLElBSEQsQ0FHTUQsaUJBQUtKLElBQUwsQ0FBVUosTUFBTSxDQUFDTSxHQUFQLENBQVdGLElBQXJCLENBSE47QUFHbUMsQ0FKdkMsQyxDQUtBO0FBRUE7QUFDQTs7O0FBQ0EsSUFBTWUsT0FBTyxHQUFHWCxpQkFBS1ksTUFBTCxDQUFZLENBQUNSLEtBQUQsRUFBT04sR0FBUCxDQUFaLENBQWhCOztBQUNBLElBQU1lLElBQUksR0FBR2IsaUJBQUtjLFFBQUwsQ0FBYyxDQUFDVCxTQUFELEVBQVdHLFdBQVgsQ0FBZCxDQUFiLEMsQ0FBcUQ7OztBQUNyRCxJQUFNTyxNQUFNLEdBQUlmLGlCQUFLWSxNQUFMLENBQVksQ0FBQ25CLEdBQUQsRUFBS00sR0FBTCxDQUFaLENBQWhCOztBQUdPLElBQU1pQixHQUFHLEdBQUdoQixpQkFBS1ksTUFBTCxDQUFZLENBQUNELE9BQUQsRUFBU0ksTUFBVCxFQUFnQkYsSUFBaEIsQ0FBWixDQUFaLEMsQ0FDUDtBQUVBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qaXNhbmcvRGVza3RvcC93b3Jrc3BhY2VzL3N1cGVyZ3VscC8iLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBndWxwLCB7IGRlc3QgfSBmcm9tIFwiZ3VscFwiO1xuaW1wb3J0IGdwdWcgZnJvbSBcImd1bHAtcHVnXCI7XG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcbmltcG9ydCBXUyBmcm9tIFwiZ3VscC13ZWJzZXJ2ZXJcIjtcbmltcG9ydCBpbWFnZSBmcm9tIFwiZ3VscC1pbWFnZVwiO1xuaW1wb3J0IGdTYXNzLCB7IGxvZ0Vycm9yIH0gZnJvbSBcImd1bHAtc2Fzc1wiO1xuXG5nU2Fzcy5jb21waWxlciA9IHJlcXVpcmUoXCJub2RlLXNhc3NcIik7XG5jb25zdCByb3V0ZXMgPSB7XG4gICAgcHVnOntcbiAgICAgICAgc3JjOiBcInNyYy8qLnB1Z1wiLCAvL+yVoOulvCDqsJDsi5ztlZjrqbQg7KCc64yA66GcIOyekeuPmeyViO2VqCDqs6DroZwg66qo65OgIO2MjOydvOydhCDqsJDsi5ztlbTslbztlbRcbiAgICAgICAgd2F0Y2g6IFwic3JjLyoqLyoucHVnXCIsXG4gICAgICAgIGRlc3Q6XCJnb2FsXCJcbiAgICB9LFxuICAgIHNjc3M6e1xuICAgICAgICB3YXRjaDpcInNyYy9zY3NzLyoqLyouc2Nzc1wiLFxuICAgICAgICBzcmM6IFwic3JjL3Njc3Mvc3R5bGUuc2Nzc1wiLFxuICAgICAgICBkZXN0OiBcImdvYWwvY3NzXCJcblxuICAgIH0sXG4gICAgaW1nOiB7XG4gICAgICAgIHNyYzogXCJzcmMvaW1nLypcIixcbiAgICAgICAgZGVzdDogXCJnb2FsL2ltZ1wiXG4gICAgICB9XG4gICAvKiBpbWc6e1xuICAgICAgICBzcmM6XCJzcmMvaW1nLypcIixcbiAgICAgICAgZGVzdDpcImdvYWwvaW1nXCJcbiAgICB9ICAgKi9cbn07XG5cbmNvbnN0IGNzcyA9ICgpID0+IGd1bHAuc3JjKHJvdXRlcy5zY3NzLnNyYykucGlwZShnU2FzcygpLm9uKFwiZXJyb3JcIixsb2dFcnJvcikpLnBpcGUoZGVzdChyb3V0ZXMuc2Nzcy5kZXN0KSk7XG5cbmNvbnN0IHB1ZyA9ICgpID0+XG4gIGd1bHBcbiAgICAuc3JjKHJvdXRlcy5wdWcuc3JjKVxuICAgIC5waXBlKGdwdWcoKSlcbiAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLnB1Zy5kZXN0KSk7XG5cbmNvbnN0IGNsZWFyID0gKCkgPT4gZGVsKFtcImdvYWxcIl0pO1xuXG5jb25zdCB3ZWJzZXJ2ZXIgPSAoKSA9PiBndWxwLnNyYyhcImdvYWwvXCIpLnBpcGUoV1Moe1xuICAgIGxpdmVyZWxvYWQ6IHRydWUsXG4gICAgb3BlbjogdHJ1ZVxufSkpO1xuXG5jb25zdCB3YXRjaFRhcmdldCA9ICgpID0+e1xuICAgIGd1bHAud2F0Y2gocm91dGVzLnB1Zy53YXRjaCxwdWcpO1xuICAgIGd1bHAud2F0Y2gocm91dGVzLmltZy5zcmMsaW1nKTtcbiAgICBndWxwLndhdGNoKHJvdXRlcy5zY3NzLndhdGNoLGNzcyk7XG4gICAgXG59O1xuXG5jb25zdCB3YXRjaF9pbWcgPSAoKSA9PiBndWxwLndhdGNoKHJvdXRlcy5pbWcuc3JjLmltZyk7XG5cbmNvbnN0IGltZyA9ICgpID0+XG4gIGd1bHBcbiAgICAuc3JjKHJvdXRlcy5pbWcuc3JjKVxuICAgIC5waXBlKGltYWdlKCkpXG4gICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5pbWcuZGVzdCkpO1xuXG5jb25zdCBpbWdPcHQgPSAoKSA9PntcbiAgICBndWxwXG4gICAgLnNyYyhyb3V0ZXMuaW1nLnNyYylcbiAgICAucGlwZShpbWFnZSgpKVxuICAgIC5waXBlKGd1bHAuZGVzdChyb3V0ZXMuaW1nLmRlc3QpKTt9IFxuLy/snITsl5Ag6rK97JqwIGFzeW5jIOyXkOufrCDrgqgsIO2ZlOyCtO2RnCDtlajsiJjqsIAge33qsJDsi7jrqbQgdGhpcyDsho3shLHsnbQg67OA7ZWoIOyjvOydmPCfmILwn5iC8J+YgvCfmILwn5iCXG5cbi8v64K06rCAIOy7pOunqOuTnCDtlaDqsoPrp4wgZXhwb3J0IO2VmOuptOuMkFxuLy9pbWfripQg7Jqp65+J7J207Luk7IScIOyLnOqwhCDrp47snbQg7J6h7JWE66i57Jy864uI6rmMIHByZXBhcmUgc2VjdGlvbuyXkOyEnCDsi5ztlonsi5ztgqTripTqsowg64KY7J2E65OvLCDqs4Tsho0gd2F0Y2jri7ntlZjrqbQg64SI66y0IOu5hO2aqOycqOyggeyehFxuY29uc3QgcHJlcGFyZSA9IGd1bHAuc2VyaWVzKFtjbGVhcixpbWddKTtcbmNvbnN0IGxpdmUgPSBndWxwLnBhcmFsbGVsKFt3ZWJzZXJ2ZXIsd2F0Y2hUYXJnZXRdKTsgLy/rj5nsi5wg7Iuk7ZaJXG5jb25zdCBhc3NldHMgPSAgZ3VscC5zZXJpZXMoW3B1Zyxjc3NdKTtcblxuXG5leHBvcnQgY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoW3ByZXBhcmUsYXNzZXRzLGxpdmVdKTtcbi8vZXhwb3J0IGNvbnN0IGVuYWJsZV93YXRjaF9pbWcgPSBndWxwLnNlcmllcyhbd2F0Y2hfaW1nXSk7XG5cbi8vL+usuOygnCwg7J207KCcIOyXrOq4sOyEoCByZWxvYWTquLDriqXsnbQg7JWI66i57Z6YIC0tPiBndWxw6rCAIOuCtCBwdWftjIzsnbzsnYQg6rCQ7Iuc7JWI7ZWY6riwIOuVjOusuFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gSass",
        "compiler",
        "require",
        "routes",
        "pug",
        "src",
        "watch",
        "dest",
        "scss",
        "img",
        "css",
        "gulp",
        "pipe",
        "on",
        "logError",
        "clear",
        "webserver",
        "livereload",
        "open",
        "watchTarget",
        "watch_img",
        "imgOpt",
        "prepare",
        "series",
        "live",
        "parallel",
        "assets",
        "dev"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/jisang/Desktop/workspaces/supergulp/",
      "sourcesContent": [
        "\nimport gulp, { dest } from \"gulp\";\nimport gpug from \"gulp-pug\";\nimport del from \"del\";\nimport WS from \"gulp-webserver\";\nimport image from \"gulp-image\";\nimport gSass, { logError } from \"gulp-sass\";\n\ngSass.compiler = require(\"node-sass\");\nconst routes = {\n    pug:{\n        src: \"src/*.pug\", //애를 감시하면 제대로 작동안함 고로 모든 파일을 감시해야해\n        watch: \"src/**/*.pug\",\n        dest:\"goal\"\n    },\n    scss:{\n        watch:\"src/scss/**/*.scss\",\n        src: \"src/scss/style.scss\",\n        dest: \"goal/css\"\n\n    },\n    img: {\n        src: \"src/img/*\",\n        dest: \"goal/img\"\n      }\n   /* img:{\n        src:\"src/img/*\",\n        dest:\"goal/img\"\n    }   */\n};\n\nconst css = () => gulp.src(routes.scss.src).pipe(gSass().on(\"error\",logError)).pipe(dest(routes.scss.dest));\n\nconst pug = () =>\n  gulp\n    .src(routes.pug.src)\n    .pipe(gpug())\n    .pipe(gulp.dest(routes.pug.dest));\n\nconst clear = () => del([\"goal\"]);\n\nconst webserver = () => gulp.src(\"goal/\").pipe(WS({\n    livereload: true,\n    open: true\n}));\n\nconst watchTarget = () =>{\n    gulp.watch(routes.pug.watch,pug);\n    gulp.watch(routes.img.src,img);\n    gulp.watch(routes.scss.watch,css);\n    \n};\n\nconst watch_img = () => gulp.watch(routes.img.src.img);\n\nconst img = () =>\n  gulp\n    .src(routes.img.src)\n    .pipe(image())\n    .pipe(gulp.dest(routes.img.dest));\n\nconst imgOpt = () =>{\n    gulp\n    .src(routes.img.src)\n    .pipe(image())\n    .pipe(gulp.dest(routes.img.dest));} \n//위에 경우 async 에러 남, 화살표 함수가 {}감싸면 this 속성이 변함 주의😂😂😂😂😂\n\n//내가 커맨드 할것만 export 하면댐\n//img는 용량이커서 시간 많이 잡아먹으니까 prepare section에서 시행시키는게 나을듯, 계속 watch당하면 너무 비효율적임\nconst prepare = gulp.series([clear,img]);\nconst live = gulp.parallel([webserver,watchTarget]); //동시 실행\nconst assets =  gulp.series([pug,css]);\n\n\nexport const dev = gulp.series([prepare,assets,live]);\n//export const enable_watch_img = gulp.series([watch_img]);\n\n///문제, 이제 여기선 reload기능이 안먹힘 --> gulp가 내 pug파일을 감시안하기 때문\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592658664642
  }
}